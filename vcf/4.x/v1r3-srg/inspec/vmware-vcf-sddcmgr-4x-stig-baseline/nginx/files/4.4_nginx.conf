error_log /var/log/nginx/error.log info;

events {
    worker_connections  1024;
}

http {
    include /etc/nginx/testsite.conf;
    limit_conn_zone $server_name zone=per_server:10m;
    limit_conn per_server 1000;
    limit_conn_zone $binary_remote_addr zone=per_ip:10m;
    limit_conn per_ip 100;
    limit_req_zone $binary_remote_addr zone=api_traffic:10m rate=5000r/s;
    limit_req_zone $binary_remote_addr zone=ui_traffic:10m rate=1000r/s;
    limit_req_zone $binary_remote_addr zone=ui_file_upload:10m rate=1r/s;
    map_hash_bucket_size 128;
    proxy_send_timeout 600;
    proxy_read_timeout 600;
    proxy_cookie_path / "/; HTTPOnly; Secure";
    # http://nginx.org/en/docs/http/ngx_http_core_module.html#server_tokens
    server_tokens off;
    ssi off;
    log_format custom '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log custom;
    server {
        # make http port 80 local only
        server_name localhost;
        listen 127.0.0.1:80 default_server;
        listen [::1]:80 default_server;
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options nosniff;

        # prevent HTTP Smuggling
        chunked_transfer_encoding off;

        # enable the following 2 lines to show rewrite logging in the error
        # http error log
        # error_log /var/log/nginx/http.error.log notice;
        # access_log /var/log/nginx/http.access.log;
        # rewrite_log on;

        # proxied /ui/api requests that are redirected to localhost from https block
        # will have /ui/api still attached

        location /nginx_status {
            stub_status;
        }

        # commonsvcs `features/list` endpoint does not include 'commonsvcs' in url unlike other commonsvcs apis
        location /commonsvcs/features/list {
            # internal mapping (about, et al)
            proxy_pass http://127.0.0.1:7100/features/list;
        }

        # FIPS status v1 public APIs
        location = /v1/system/security/fips  {
            proxy_pass http://127.0.0.1:7100/v1/system/security/fips;
        }

        # Proxy configuration v1 public APIs
        location ~ ^/v1/system/proxy-configuration(.*) {
            proxy_pass http://127.0.0.1:7100/v1/system/proxy-configuration$1$2$is_args$args;
        }

        location /commonsvcs/ {
            # internal mapping (about, et al)
            proxy_pass http://127.0.0.1:7100;
        }

        location = /appliancemanager/security/passwords {
            # redirect to 443 because basic auth is mandatory for this endpoint
            return 301 https://$host$request_uri;
        }

        location ~ ^/appliancemanager/ssh/knownHosts(.*) {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            client_max_body_size 5m;
            proxy_pass http://127.0.0.1:7100/appliancemanager/ssh/knownHosts$1$2$is_args$args;
        }

        location ~ ^/(activity|appliancemanager|dns|inventory|locks|task-types|networkpools|tasks|workflows)(.*) {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            proxy_pass http://127.0.0.1:7100/$1$2$is_args$args;
            client_max_body_size 50m;
        }
        location ~ ^/(identity)(.*) {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            proxy_pass http://127.0.0.1:7100/$1$2$is_args$args;
        }
        location  ~ ^/v1/(resource-topologies|resource-locks|tasks|network-pools|pscs|vxrail-managers|vcenters|sddc-managers|nsx-managers|vcf-services|users|roles|tokens|sso-domains|sddc-manager|securitySettings|identity-providers|resource-warnings|resource-functionalities)(.*) {
            proxy_pass http://127.0.0.1:7100/v1/$1$2$is_args$args;
        }
        location ~ ^/v1/system/credentials(.*) {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            proxy_pass http://127.0.0.1:7100/v1/system/credentials$1$is_args$args;
        }
        # Public api v1 ceip http
        location ~ ^/v1/system/ceip(.*) {
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/ceip$1$is_args$args;
        }
        location ~ ^/v1/avns(.*) {
            proxy_pass http://127.0.0.1:7200/domainmanager/v1/avns$1$is_args$args;
        }
        location ~ ^/internal/avns(.*) {
            proxy_pass http://127.0.0.1:7100/internal/avns$1$is_args$args;
        }
        #Tags
        location ~ ^/v1/(domains|hosts|clusters)/([a-zA-Z0-9\-]+)/tags(.*) {
            proxy_pass http://127.0.0.1:7100/v1/tags/resources/$1/$2$3$is_args$args;
        }
        location ~ ^/v1/tags(.*) {
            proxy_pass http://127.0.0.1:7100/v1/tags$1$is_args$args;
        }
        location ~ ^/sos/(.*) {
            proxy_pass http://127.0.0.1:7600/$1$is_args$args;
        }

        # SOS APIs, accessed without /sos
        location ~ ^/(backups|restores)(.*) {
            proxy_pass http://127.0.0.1:7600/$1$2$is_args$args;
        }
         # SOS v1 public APIs
        location  ~ ^/v1/system/(support-bundles|health-summary)(.*) {
           proxy_pass http://127.0.0.1:7600/v1/$1$2$is_args$args;
        }
        # certificate management v1 public APIs
        location ~ ^/v1/domains/([a-zA-Z0-9\-]+/)(certificates|csrs|resource-certificates)(.*) {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/domains/$1$2$3$is_args$args;
        }
        # When FSM data is part of import, can be more than default 1mb size (http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size)
        # and to avoid failures due to this, bumping value to 50 mb.
        # It is a temporary solution.
        location ~ ^/domainmanager/(import|export)$ {
            client_max_body_size 50m;
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;

            proxy_pass http://127.0.0.1:7200/domainmanager/$1$2$is_args$args;
        }
        location /domainmanager/ {
            # internal mapping (about, et al)
            proxy_pass http://127.0.0.1:7200;
        }
        # domainmanager APIs, accessed without /domainmanager
        location ~ ^/(hosts|clusters|vidomains|vrealize)(.*) {
            proxy_pass http://127.0.0.1:7200/domainmanager/$1$2$is_args$args;
        }
        location ~ ^/vxrail/(vcenters)(.*){
            proxy_pass http://127.0.0.1:7200/domainmanager/vxrail/$1$2$is_args$args;
        }

        location ~ ^/v1/personalities/files(.*) {

            client_max_body_size 999m;
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;

            limit_conn per_ip 1;
            limit_req zone=ui_file_upload;

            proxy_pass http://127.0.0.1:7400/v1/personalities/files$is_args$args;
        }

          # ntp-configuration v1 public APIs
        location ~ ^/v1/system/ntp-configuration(.*)  {
           proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/ntp-configuration$1$is_args$args;
        }
        # dns-configuration v1 public APIs
        location ~ ^/v1/system/dns-configuration(.*)  {
           proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/dns-configuration$1$is_args$args;
        }

        # lcm v1 public APIs
        location  ~ ^/v1/(bundles|upgradables|upgrades|system|personalities|manifests|releases|domainTargetVersion)(.*) {
            proxy_pass http://127.0.0.1:7400/v1/$1$2$is_args$args;
        }

        location ~ ^/v1/domains/([a-zA-Z0-9\-]+)/health-checks(.*) {
            proxy_pass http://127.0.0.1:7400/v1/domains/$1/health-checks$2$is_args$args;
        }

        # domainmanager v1 public APIs
        location  ~ ^/v1/(domains|clusters|vrslcm|vrops|vrli|load-balancers|deployment-endpoint|wsa|vra|edge-clusters|wcps|validation|nsxt-clusters|vasa-providers)(.*) {
            proxy_pass http://127.0.0.1:7200/domainmanager/v1/$1$2$is_args$args;
        }
        location ~ ^/operationsmanager/(import|export)$ {
            client_max_body_size 50m;
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;

            proxy_pass http://127.0.0.1:7300/operationsmanager/$1$2$is_args$args;
        }
        location /operationsmanager/ {
            # internal mapping (about, et al)
            proxy_pass http://127.0.0.1:7300;
        }

        # Certificates  APIs, accessed without /operationsmanager
        location  ~ ^/(security)(.*) {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            proxy_pass http://127.0.0.1:7300/operationsmanager/$1$2$is_args$args;
        }

        # operationsmanager APIs, accessed without /operationsmanager
        location  ~ ^/(ra|password|licensing|composition|imaging|telemetry|events|system)(.*) {
            proxy_pass http://127.0.0.1:7300/operationsmanager/$1$2$is_args$args;
        }

        location = /hosts/commission/validate  {
            proxy_pass http://127.0.0.1:7300/operationsmanager/hosts/commission/validate;
        }
        location = /hosts/commission/validate/spec  {
            proxy_pass http://127.0.0.1:7300/operationsmanager/hosts/commission/validate/spec;
        }
        location = /hosts/commission/validate/status  {
            proxy_pass http://127.0.0.1:7300/operationsmanager/hosts/commission/validate/status;
        }
        location = /hosts/commission/validate/result  {
            proxy_pass http://127.0.0.1:7300/operationsmanager/hosts/commission/validate/result;
        }
        location = /hosts/commission  {
            proxy_pass http://127.0.0.1:7300/operationsmanager/hosts/commission;
        }
        location = /hosts/commission/internal  {
            proxy_pass http://127.0.0.1:7300/operationsmanager/hosts/commission/internal;
        }
        location = /hosts/decommission  {
            proxy_pass http://127.0.0.1:7300/operationsmanager/hosts/decommission;
        }
        location = /hosts/image  {
            proxy_pass http://127.0.0.1:7300/operationsmanager/hosts/image;
        }

        # operationsmanager v1 public APIs
        location  ~ ^/v1/(hosts|license-keys|credentials|backups|certificate-authorities|service-accounts)(.*) {
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/$1$2$is_args$args;
        }
        # defining this separately as the resource 'system' in the url is shared with lcm public APIs
        location = /v1/system/backup-configuration  {
           proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/backup-configuration;
        }
        # to trigger restores, the public api v1 is defined in operationsmanager
        # and the get api to get the progress is defined in sos
        location  ~ ^/v1/(restores)(.*) {
            #auth_basic           "closed site";
            #auth_basic_user_file /etc/nginx/.htpasswd;

            if ($request_method = POST ) {
              proxy_pass http://127.0.0.1:7300/operationsmanager/v1/$1$2$is_args$args;
            }

             if ($request_method = GET ) {
              proxy_pass http://127.0.0.1:7600/v1/$1$2$is_args$args;
            }
        }
        location /lcm/bundle/upload/partnerBundle/ {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;

            proxy_pass http://127.0.0.1:7400;
        }
        location /lcm/depot/user {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;

            proxy_pass http://127.0.0.1:7400;
        }
        location /lcm/features/list  {
            proxy_pass http://127.0.0.1:7400/features/list;
        }
        location /lcm/ {
            proxy_pass http://127.0.0.1:7400;
        }
        location /sddc-manager-ui-app/ {
            # internal mapping (about, et al)
            proxy_pass http://127.0.0.1:7500;
        }

        # VIP location
        location ~ ^/vip(.*) {
            proxy_pass http://127.0.0.1:7900/$1$2$is_args$args;
        }

        # Agent System Manager
        location /asm/ {
            # internal mappings
            proxy_pass http://127.0.0.1:8100;
        }

    }

    server {
        include /etc/nginx/mime.types;
        # enable the following 2 lines to show rewrite logging in the error
        # https error log
        # error_log /var/log/nginx/https.error.log notice;
        # access_log /var/log/nginx/https.access.log;
        # rewrite_log on;

        proxy_pass_request_headers on;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_redirect off;

        #server_name sddc-manager;
        #TODO: bind these to the public IP, BUT it is not fixed as 10.0.0.4,
        # so devise a way to edit this file when we install it. Perhaps using
        # a hostname that resolves would be the way to go? Test it out.
        listen 443 ssl;
        listen [::]:443 ssl;
        limit_conn per_ip 100;
        limit_conn per_server 100;
        limit_req zone=api_traffic burst=100 nodelay;

        # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
        ssl_certificate /etc/ssl/certs/vcf_https.crt;
        ssl_certificate_key /etc/ssl/private/vcf_https.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        # modern configuration. tweak to your needs.
        ssl_protocols TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';

        ssl_client_certificate /etc/ssl/certs/client.crt;
        ssl_verify_client optional;
        ssl_verify_depth 10;

        # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
        add_header Strict-Transport-Security max-age=15768000;
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options nosniff;

        location /ui {

            # UI server handles auth via PSC/SSO
            #NO: limit_req zone=ui_traffic;
            alias /opt/vmware/vcf/sddc-manager-ui-app/client/dist/client;

            # restrict the impact of the file size properties only to upload location
            location ^~ /ui/api/vrealize/vra/file_upload {
                client_max_body_size 0;
                proxy_read_timeout   600;
                limit_conn per_ip 1;
                limit_req zone=ui_file_upload;

                # UI server handles auth via PSC/SSO
                proxy_pass http://127.0.0.1:7500;
            }

            # restrict the impact of the file size properties only to upload location
            location ^~ /ui/api/file_upload {
                client_max_body_size 0;
                proxy_read_timeout   600;
                limit_conn per_ip 1;
                limit_req zone=ui_file_upload;

                # UI server handles auth via PSC/SSO
                proxy_pass http://127.0.0.1:7500;
            }

            # restrict the impact of the file size properties only to upload location
            location ^~ /ui/api/v1/personalities/files {
                client_max_body_size 1g;
                proxy_read_timeout   600;
                limit_conn per_ip 1;
                limit_req zone=ui_file_upload;

                # UI server handles auth via PSC/SSO
                proxy_pass http://127.0.0.1:7500;
            }

            # increase timeout for identity/entities API request
            location ^~ /ui/api/identity/entities {
                proxy_read_timeout   600;
                proxy_connect_timeout   600;
                proxy_send_timeout   600;

                # UI server handles auth via PSC/SSO
                proxy_pass http://127.0.0.1:7500;
            }

            # increase timeout for security/certificates API request
           location ^~ /ui/api/security/certificates/sddc-domains {
               proxy_read_timeout   600;
               proxy_connect_timeout   600;
               proxy_send_timeout   600;

               # UI server handles auth via PSC/SSO
               proxy_pass http://127.0.0.1:7500;
            }

            # 'identity/permission' and 'privileges/loggedInUser' routes must flow through UI server to have
            # GROUP-INFO inserted into the request body
            location ~ /ui/.* {
                try_files $uri @sddc-manager-ui-app;
                break;
            }

        }

        # VIP location
        location ~ ^/vip(.*) {
            proxy_pass http://127.0.0.1/vip/$1$2$is_args$args;
        }

        # Enabling https access for install/update images in bundle repo
        location /vmware/vcf/ {
            alias /nfs/vmware/vcf/nfs-mount/;
            autoindex on;
            autoindex_exact_size off;
            limit_except GET {
                deny all;
            }
        }

        location ~ ^/(inventory|identity|operationsmanager|domainmanager)/export {
            deny all;
        }

        location = /lcm/data/export {
            deny all;
        }

        location = /appliancemanager/security/serviceaccounts/internal {
            # redirect to 403 because this endpoint is forbidden outside of sddc manager
            return 403 https://$host$request_uri;
        }

        location ~* .(jpg|jpeg|png|gif|svg|css|js)$ {
            # sets cache-control & expires headers
            # http://nginx.org/en/docs/http/ngx_http_headers_module.html#expires
            expires max;
        }

        location @sddc-manager-ui-app {
            proxy_cookie_path off;
            proxy_pass http://127.0.0.1:7500;
        }

        location / {
            return 301 https://$host/ui;
        }

        # Public api v1 ceip https
        location ~ ^/v1/system/ceip(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/ceip$1$is_args$args;
        }

        location  ~ ^/v1/(resource-topologies|resource-locks|tasks|network-pools|pscs|vxrail-managers|vcenters|sddc-managers|nsx-managers|vcf-services|users|roles|tokens|sso-domains|sddc-manager|securitySettings|identity-providers|resource-warnings|resource-functionalities)(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7100/v1/$1$2$is_args$args;
        }
        location ~ ^/v1/system/credentials(.*) {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            proxy_pass http://127.0.0.1:7100/v1/system/credentials$1$is_args$args;
        }
        # AVN API's
        location ~ ^/v1/avns(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7200/domainmanager/v1/avns$1$is_args$args;
        }
        #Tags
        location ~ ^/v1/(domains|hosts|clusters)/([a-zA-Z0-9\-]+)/tags(.*) {
            proxy_pass http://127.0.0.1:7100/v1/tags/resources/$1/$2$3$is_args$args;
        }
        location ~ ^/v1/tags(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7100/v1/tags$1$is_args$args;
        }
        # SOS V1 Public APIs
        # Options sendfile, tcp_nopush used to reduce network overhead
        # Option sendfile_max_chunk to limit the amount of data transferred and improve performance
        location ~ ^/v1/system/(support-bundles|health-summary)(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            sendfile            on;
            sendfile_max_chunk          1m;
            tcp_nopush on;
            proxy_pass http://127.0.0.1:7600/v1/$1$2$is_args$args;
        }
        # certificate management v1 public APIs
        location ~ ^/v1/domains/([a-zA-Z0-9\-]+/)(certificates|csrs|resource-certificates)(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/domains/$1$2$3$is_args$args;
        }

        location ~ ^/v1/domains/([a-zA-Z0-9\-]+)/health-checks(.*) {
            proxy_pass http://127.0.0.1:7400/v1/domains/$1/health-checks$2$is_args$args;
        }

        # domainmanager v1 public APIs
       location  ~ ^/v1/(domains|clusters|vrslcm|vrops|vrli|load-balancers|deployment-endpoint|wsa|vra|edge-clusters|wcps|validation|nsxt-clusters|vasa-providers)(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7200/domainmanager/v1/$1$2$is_args$args;
        }
        # operationsmanager v1 public APIs
        location  ~ ^/v1/(hosts|license-keys|credentials|backups|certificate-authorities|service-accounts)(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/$1$2$is_args$args;
        }
        # defining this separately as the resource 'system' in the url is shared with lcm public APIs
        location = /v1/system/backup-configuration  {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/backup-configuration;
        }
        # ntp-configuration v1 public APIs
        location ~ ^/v1/system/ntp-configuration(.*)  {
           # auth_basic           "closed site";
           # auth_basic_user_file /etc/nginx/.htpasswd;

           proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/ntp-configuration$1$is_args$args;
        }

        # dns-configuration v1 public APIs
        location ~ ^/v1/system/dns-configuration(.*)  {
           # auth_basic           "closed site";
           # auth_basic_user_file /etc/nginx/.htpasswd;
           proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/dns-configuration$1$is_args$args;
        }
        # FIPS status v1 public APIs
        location = /v1/system/security/fips  {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://127.0.0.1:7100/v1/system/security/fips;
        }

        # Proxy configuration v1 public APIs
        location ~ ^/v1/system/proxy-configuration(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://127.0.0.1:7100/v1/system/proxy-configuration$1$2$is_args$args;
        }

        location ~ ^/v1/personalities/files(.*) {
           # auth_basic           "closed site";
           # auth_basic_user_file /etc/nginx/.htpasswd;

           client_max_body_size 999m;
           proxy_read_timeout   600;
           proxy_connect_timeout   600;
           proxy_send_timeout   600;

           limit_conn per_ip 1;
           limit_req zone=ui_file_upload;

           proxy_pass http://127.0.0.1:7400/v1/personalities/files$is_args$args;
        }

        # lcm v1 public APIs
        location  ~ ^/v1/(bundles|upgradables|upgrades|system|personalities|manifests|releases|domainTargetVersion)(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_max_temp_file_size 0;
            proxy_pass http://127.0.0.1:7400/v1/$1$2$is_args$args;
        }

        # to trigger restores, the public api v1 is defined in operationsmanager
        # and the get api to get the progress is defined in sos
        location  ~ ^/v1/(restores)(.*) {
            #auth_basic           "closed site";
            #auth_basic_user_file /etc/nginx/.htpasswd;

            if ($request_method = POST ) {
              proxy_pass http://127.0.0.1:7300/operationsmanager/v1/$1$2$is_args$args;
            }

             if ($request_method = GET ) {
              proxy_pass http://127.0.0.1:7600/v1/$1$2$is_args$args;
            }
        }

        ### BASIC_AUTH_START ###

        location /appliancemanager/nfs/configuration {
            if ($request_method = GET ) {
                return 403;
            }
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://127.0.0.1:7100;
        }

        location ~ ^/(appliancemanager|commonsvcs|css|credentials-service|dns|inventory|locks|networkpools|workflows)(.*) {
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;

            proxy_pass http://127.0.0.1:7100/$1$2$is_args$args;
        }
        location ~ ^/(identity)(.*) {
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;

            proxy_pass http://127.0.0.1:7100/$1$2$is_args$args;
        }

        location ~ ^/internal/avns(.*) {
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://127.0.0.1:7100/internal/avns$1$is_args$args;
        }

        # SoS APIs
        location ~ ^/sos/(.*) {
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://127.0.0.1:7600/$1$is_args$args;
        }
        # SoS APIs, accessed without /sos
        location ~ ^/(backups|restores)(.*) {
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://127.0.0.1:7600/$1$2$is_args$args;
        }

        location /domainmanager/import {
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;

            client_max_body_size 50m;
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;

            proxy_pass http://127.0.0.1:7200/domainmanager/import;
        }

        # all domainmanager APIs
        location /domainmanager/ {
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://127.0.0.1:7200;
        }
        # domainmanager APIs, accessed without /domainmanager
        location ~ ^/(hosts|clusters|vidomains|vrealize)(.*) {
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://127.0.0.1:7200/domainmanager/$1$2$is_args$args;
        }

        location ~ ^/vxrail/(vcenters)(.*) {
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://127.0.0.1:7200/domainmanager/vxrail/$1$2$is_args$args;
        }

        location /operationsmanager/import {
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;

            client_max_body_size 50m;
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;

            proxy_pass http://127.0.0.1:7300/operationsmanager/import;
        }
        # all operationsmanager APIs
        location  /operationsmanager/ {
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://127.0.0.1:7300;
        }

        # Certificates APIs, accessed without /operationsmanager
        location  ~ ^/(security)(.*) {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;

            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7300/operationsmanager/$1$2$is_args$args;
        }

        # operationsmanager APIs, accessed without /operationsmanager
        location  ~ ^/(ra|password|licensing|composition|imaging|telemetry|events|system)(.*) {
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://127.0.0.1:7300/operationsmanager/$1$2$is_args$args;
        }

        location = /system/configurations/dnsservers  {
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://127.0.0.1:7300/operationsmanager/system/configurations/dnsservers/$1$2$is_args$args;
        }

        location = /system/configurations/ntpservers  {
           auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://127.0.0.1:7300/operationsmanager/system/configurations/ntpservers/$1$2$is_args$args;
        }

        location = /hosts/commission  {
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://127.0.0.1:7300/operationsmanager/hosts/commission;
        }
        location = /hosts/decommission  {
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://127.0.0.1:7300/operationsmanager/hosts/decommission;
        }
        location = /hosts/image  {
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://127.0.0.1:7300/operationsmanager/hosts/image;
        }

        location /lcm/bundle/upload/partnerBundle/ {
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;

            proxy_pass http://127.0.0.1:7400;
        }

        location /lcm/depot/user {
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;

            proxy_pass http://127.0.0.1:7400;
        }

        location /lcm/ {
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://127.0.0.1:7400;
        }

        location ~ ^/(sddc-manager-ui-app/import|sddc-manager-ui-app/about) {
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://127.0.0.1:7500;
        }

        # Agent System Manager
        location /asm/ {
            auth_basic           "closed site";
            auth_basic_user_file /etc/nginx/.htpasswd;
            # internal mappings
            proxy_pass http://127.0.0.1:8100;
        }

        ### BASIC_AUTH_END ###

    }
}
